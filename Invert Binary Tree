Invert a binary tree.

Example:

Input:

     4
   /   \
  2     7
 / \   / \
1   3 6   9
Output:

     4
   /   \
  7     2
 / \   / \
9   6 3   1
Trivia:
This problem was inspired by this original tweet by Max Howell:

Google: 90% of our engineers use the software you wrote (Homebrew), but you canâ€™t invert a binary tree on a whiteboard so f*** off.

# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def invertTree(self, root):
        """
        :type root: TreeNode
        :rtype: TreeNode
        """
        if(root==None):
            return None
        ptr=root
        if(ptr.left!=None or ptr.right!=None):
            temp=ptr.left
            ptr.left=ptr.right
            ptr.right=temp
        if(ptr.left!=None):
            self.invertTree(ptr.left)
        if(ptr.right!=None):
            self.invertTree(ptr.right)
        return root
